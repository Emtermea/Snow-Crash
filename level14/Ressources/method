on veut le flag et pas d'indication donc on va voir du coté de la commande `getflag`.
Cette commnde utilise 'id du user pour savoir s'il a les droits d'executer la commande

-> gdb getflag
-> break main
-> run
-> disas main (pour désassembler le binaire et avoir du code en ASM)

on `return` tant qu'on a pas d'occurence avec `getuid` (cmd+ f getuid)


0x08048afd <+439>:	call   0x80484b0 <getuid@plt>
0x08048b02 <+444>:	mov    %eax,0x18(%esp)
0x08048b06 <+448>:	mov    0x18(%esp),%eax
0x08048b0a <+452>:	cmp    $0xbbe,%eax
0x08048b0f <+457>:	je     0x8048ccb <main+901>
0x08048b15 <+463>:	cmp    $0xbbe,%eax
0x08048b1a <+468>:	ja     0x8048b68 <main+546>
0x08048b1c <+470>:	cmp    $0xbba,%eax
0x08048b21 <+475>:	je     0x8048c3b <main+757>
0x08048b27 <+481>:	cmp    $0xbba,%eax
0x08048b2c <+486>:	ja     0x8048b4d <main+519>
0x08048b2e <+488>:	cmp    $0xbb8,%eax
0x08048b33 <+493>:	je     0x8048bf3 <main+685>
0x08048b39 <+499>:	cmp    $0xbb8,%eax
0x08048b3e <+504>:	ja     0x8048c17 <main+721>
0x08048b44 <+510>:	test   %eax,%eax
0x08048b46 <+512>:	je     0x8048bc6 <main+640>


toujours dans gdb on va a l'address de la premiere occurence avec le main
-> jump *0x8048ccb

(gdb) jump *0x8048ccb
Continuing at 0x8048ccb.
wiok45aaoguiboiki2tuin6ub
*** stack smashing detected ***: /bin/getflag terminated

toutes les occurrences avec main donnent le flag d'un des niveaux precedents, l'address `0x8048bf3` donne le flag du level00
a partir de celle ci on compte la 15eme (puisque on a deja les flag pour acceder aux 14 niveaux precedent)

-> jump *0x8048de5

(gdb) jump *0x8048de5
Continuing at 0x8048de5.
7QiHafiNa3HVozsaXkawuYrTstxbpABHD8CPnHJ
*** stack smashing detected ***: /bin/getflag terminated

-> su flag14
